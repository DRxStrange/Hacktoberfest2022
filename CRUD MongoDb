const { json } = require('body-parser');
const bodyParser = require('body-parser');
const { application } = require('express');
const express = require('express');
const { result } = require('lodash');
const { ObjectId } = require('mongodb');
const MongoClient = require('mongodb').MongoClient;
const router=express.Router();
const app = express();
const port =process.env.PORT||8080;
const url = require('./secret');
const client=new MongoClient(url,{
    useNewUrlParser:true,
    useUnifiedTopology:true
});

app.use(bodyParser.json());
client.connect(err=>{
    const myDB=client.db('People').collection('Friends');
app.get('/user/:name',(req,res)=>{
    console.log(req.params);
   myDB.find(req.params).toArray().then(results=>{
        console.log(results);
        res.contentType('application/json');
        res.send(JSON.stringify(results));

})
})



    app.route('/users')
.get((req,res)=>{
myDB.find().toArray().then(results=>{
    console.log(results);
    res.contentType('application/json');
    res.send(JSON.stringify(results));
})
})
.post((req,res)=>{
    console.log(req.body);
myDB.insertOne(req.body).then(result=>{
    console.log(req.body);
    res.contentType('application/json');
    res.send(JSON.stringify(req.body));
})
})
.put((req,res)=>{
console.log(req.body);
myDB.findOneAndUpdate({_id:ObjectId(req.body._id)},
{$set:{
    name:req.body.name
}},
{
    upsert:false
}).then(results=>{
    res.contentType('application/json');
    res.send({
        "status":true
    })
})
})
.delete((req,res)=>{
console.log(req.body);
myDB.deleteOne({
    _id: ObjectId(req.body._id)}
).then(result=>{
let boo = true;
if(result.deletedCount===0){
    boo: false;
}
res.send({"status":boo})
})
.catch(error=>console.log(error))
})
})





app.get('/',(req,res)=>{
    res.sendFile(__dirname+'/public/index.html');
})

app.listen(port,()=>{
    console.log(`Ready on Port ${port}`);
})
